generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  investidor
  empresa
  admin
}

model User {
  id           Int      @id @default(autoincrement())
  name         String?
  email        String   @unique
  passwordHash String
  role         Role     @default(investidor)
  premium      Boolean  @default(false)
  createdAt    DateTime @default(now())
  company      Company?
  proposals    Proposal[] @relation("InvestorProposals")
}

model Company {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  name      String
  bio       String?
  website   String?
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  projects  Project[]
}

model Project {
  id                Int        @id @default(autoincrement())
  companyId         Int
  title             String
  description       String
  totalAmount       Float
  percentageOffered Float
  maxInvestors      Int
  deadline          DateTime
  status            String
  createdAt         DateTime   @default(now())
  company           Company    @relation(fields: [companyId], references: [id])
  proposals         Proposal[]
}

model Proposal {
  id                 Int      @id @default(autoincrement())
  projectId          Int
  investorId         Int
  amount             Float
  percentageRequested Float
  status             String
  createdAt          DateTime @default(now())
  project            Project  @relation(fields: [projectId], references: [id])
  investor           User     @relation("InvestorProposals", fields: [investorId], references: [id])
}

model Post {
  id        Int      @id @default(autoincrement())
  authorId  Int
  title     String
  content   String?
  createdAt DateTime @default(now())
  author    User     @relation(fields: [authorId], references: [id])
}

model Subscription {
  id        Int      @id @default(autoincrement())
  userId    Int
  start     DateTime @default(now())
  end       DateTime?
  user      User     @relation(fields: [userId], references: [id])
}

model Boost {
  id        Int      @id @default(autoincrement())
  companyId Int
  message   String
  createdAt DateTime @default(now())
  company   Company  @relation(fields: [companyId], references: [id])
}


